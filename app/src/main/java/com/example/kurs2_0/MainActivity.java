package com.example.kurs2_0;import android.app.AlarmManager;import android.app.PendingIntent;import android.content.Intent;import android.os.Bundle;import com.google.android.material.floatingactionbutton.FloatingActionButton;import com.google.android.material.snackbar.Snackbar;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import androidx.fragment.app.Fragment;import androidx.fragment.app.FragmentManager;import androidx.fragment.app.FragmentTransaction;import androidx.transition.FragmentTransitionSupport;import android.view.View;import android.view.Menu;import android.view.MenuItem;import android.widget.Button;import android.widget.CheckBox;import android.widget.CompoundButton;import android.widget.EditText;import android.widget.FrameLayout;import android.widget.LinearLayout;import android.widget.TextView;import java.util.ArrayList;import java.util.Calendar;public class MainActivity extends AppCompatActivity implements View.OnClickListener,OnFragmentAddDataListener  {    Habit name;    TextView tx;    LinearLayout container ;    int wrapContent = LinearLayout.LayoutParams.WRAP_CONTENT;    DatabaseHelper dh = new DatabaseHelper(this);    ArrayList<Habit> habits;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        Toolbar toolbar = findViewById(R.id.toolbar);        setSupportActionBar(toolbar);        FloatingActionButton fab = findViewById(R.id.fab);        fab.setOnClickListener(this) ;        GetDatabase();          }    @Override    public void onClick(View view) {        switch (view.getId()) {            case R.id.fab:                toFragment();                break;        }    }void GetDatabase(){      habits = dh.GetDate(this);    for(Habit sd: habits){        CheckBox checkBox = new CheckBox(this);        checkBox.setText(sd.getName());        container = (LinearLayout)findViewById(R.id.ainer);        LinearLayout.LayoutParams lParams = new LinearLayout.LayoutParams(                wrapContent, wrapContent);        container.addView(checkBox, lParams);    }}    public void toFragment() {        FragmentManager fm = getSupportFragmentManager();        Fragment fragment = new BlankFragment();            fm.beginTransaction()                    .add(R.id.add, fragment)                    .commit();    }    public void fromFragmentData(String data) {        //Данные получены            String[] subStr;            subStr = data.split("%");        CheckBox checkBox = new CheckBox(this);      //  DatabaseHelper dh = new DatabaseHelper(this);        dh.InsertDate(MainActivity.this,subStr[0],subStr[1],51l,4);      //  checkBox.setText(subStr[0]+": "+subStr[1]);        container = (LinearLayout)findViewById(R.id.ainer);        LinearLayout.LayoutParams lParams = new LinearLayout.LayoutParams(                wrapContent, wrapContent);        container.addView(checkBox, lParams);        setNotification( Integer.parseInt(subStr[3]),Long.parseLong(subStr[2]));    }public void setNotification (int day, long time){    Intent intent = new Intent(MainActivity.this, ReminderBroadcast.class);    PendingIntent pendingIntent = PendingIntent.getBroadcast(MainActivity.this , 0, intent, 0);    AlarmManager alarmManager = (AlarmManager)getSystemService(ALARM_SERVICE);    Calendar currentTime = Calendar.getInstance();    currentTime.get(Calendar.HOUR_OF_DAY);    currentTime.get(Calendar.MINUTE);    currentTime.get(Calendar.SECOND);    long delta;    long currentSystemTime = System.currentTimeMillis();    long newTime;    delta = time - currentTime.getTimeInMillis();//&& Calendar.DAY_OF_WEEK == day    if (delta > 0 ) {        newTime = currentSystemTime + delta;        alarmManager.setRepeating(AlarmManager.RTC_WAKEUP, newTime,24*60*60*1000, pendingIntent);    } else if (delta < 0 ) {        newTime = currentSystemTime + delta + 24 * 6 * 6 * 1000;        alarmManager.setRepeating(AlarmManager.RTC_WAKEUP, newTime, 24*60*60*1000,pendingIntent);    }}    @Override    public boolean onCreateOptionsMenu(Menu menu) {        getMenuInflater().inflate(R.menu.menu_main, menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        int id = item.getItemId();        if (id == R.id.action_settings) {            return true;        }        return super.onOptionsItemSelected(item);    }    @Override    public void onOpenFragmentHome(String string) {        FragmentManager fm = getSupportFragmentManager();        Fragment fragment = fm.findFragmentById(R.id.add);        if (fragment instanceof BlankFragment) {            Fragment fragmentReplace;            fragmentReplace = new HomeFragment();            Bundle bundle = new Bundle();            bundle.putString(HomeFragment.KEY, string);            fragmentReplace.setArguments(bundle);            fm.beginTransaction()                    .replace(R.id.container, fragmentReplace, HomeFragment.TAG)                    .setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN)                    .addToBackStack(HomeFragment.TAG)                    .commit();        }    }}