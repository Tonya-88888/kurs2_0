package com.example.kurs2_0;import android.app.AlarmManager;import android.app.PendingIntent;import android.content.Intent;import android.os.Bundle;import com.google.android.material.floatingactionbutton.FloatingActionButton;import com.google.android.material.snackbar.Snackbar;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import androidx.fragment.app.Fragment;import androidx.fragment.app.FragmentManager;import androidx.fragment.app.FragmentTransaction;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import androidx.transition.FragmentTransitionSupport;import android.view.View;import android.view.Menu;import android.view.MenuItem;import android.widget.CheckBox;import android.widget.LinearLayout;import android.widget.TextView;import java.util.ArrayList;import java.util.Arrays;import java.util.Calendar;import java.util.Collection;public class MainActivity extends AppCompatActivity implements View.OnClickListener {    private HabitAdapter habitAdapter;    LinearLayout container;    int wrapContent = LinearLayout.LayoutParams.WRAP_CONTENT;    DatabaseHelper dh = new DatabaseHelper(this);    RecyclerView habitRecyclerView;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        Toolbar toolbar = findViewById(R.id.toolbar);        setSupportActionBar(toolbar);        FloatingActionButton fab = findViewById(R.id.fab);        fab.setOnClickListener(this);        dh.InsertDate(this,"hello", "работает", 32135648423121l,12);       // habitRecyclerView = (RecyclerView)findViewById(R.id.habit_recycler_view);        initRecyclerView();        loadTweets();        //  GetDatabase();        /*    implementation 'com.android.support:recyclerview-v7:28.0.0'    implementation 'com.jakewharton:butterknife:8.8.1' //8.8.1 is the latest version atm    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'*/    }    private void initRecyclerView() {        habitRecyclerView = (RecyclerView) findViewById(R.id.habit_recycler_view);        habitRecyclerView.setLayoutManager(new LinearLayoutManager(this));        habitAdapter = new HabitAdapter();        habitRecyclerView.setAdapter(habitAdapter);    }    private void loadTweets() {        Collection<Habit> tweets = dh.GetDate(this);        habitAdapter.setItems(tweets);    }   /* private Collection<Habit> getTweets() {        return Arrays.asList(                new Habit(),                new Habit(getUser(), 2L, "Thu Dec 12 07:31:08 +0000 2017", "Очень длинное описание твита 2",                        5L, 5L, "https://www.w3schools.com/w3images/lights.jpg"),                new Habit(getUser(), 3L, "Thu Dec 11 07:31:08 +0000 2017", "Очень длинное описание твита 3",                        6L, 6L, "https://www.w3schools.com/css/img_mountains.jpg")        );    }*/    @Override    public void onClick(View view) {        switch (view.getId()) {            case R.id.fab:                toFragment();                break;        }    }    public void toFragment() {        FragmentManager fm = getSupportFragmentManager();        Fragment fragment = new BlankFragment();        fm.beginTransaction()                .add(R.id.add, fragment)                .commit();    }    public void fromFragmentData(String data) {        //Данные получены        String[] subStr;        subStr = data.split("%");        CheckBox checkBox = new CheckBox(this);        //  DatabaseHelper dh = new DatabaseHelper(this);        dh.InsertDate(MainActivity.this, subStr[0], subStr[1], 51l, 4);        //  checkBox.setText(subStr[0]+": "+subStr[1]);        //  container = (LinearLayout)findViewById(R.id.ainer);       /* LinearLayout.LayoutParams lParams = new LinearLayout.LayoutParams(                wrapContent, wrapContent);*/        //  container.addView(checkBox, lParams);        setNotification(Integer.parseInt(subStr[3]), Long.parseLong(subStr[2]));    }    public void setNotification(int day, long time) {        Intent intent = new Intent(MainActivity.this, ReminderBroadcast.class);        PendingIntent pendingIntent = PendingIntent.getBroadcast(MainActivity.this, 0, intent, 0);        AlarmManager alarmManager = (AlarmManager) getSystemService(ALARM_SERVICE);        Calendar currentTime = Calendar.getInstance();        currentTime.get(Calendar.HOUR_OF_DAY);        currentTime.get(Calendar.MINUTE);        currentTime.get(Calendar.SECOND);        long delta;        long currentSystemTime = System.currentTimeMillis();        long newTime;        delta = time - currentTime.getTimeInMillis();//&& Calendar.DAY_OF_WEEK == day        if (delta > 0) {            newTime = currentSystemTime + delta;            alarmManager.setRepeating(AlarmManager.RTC_WAKEUP, newTime, 24 * 60 * 60 * 1000, pendingIntent);        } else if (delta < 0) {            newTime = currentSystemTime + delta + 24 * 6 * 6 * 1000;            alarmManager.setRepeating(AlarmManager.RTC_WAKEUP, newTime, 24 * 60 * 60 * 1000, pendingIntent);        }    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        getMenuInflater().inflate(R.menu.menu_main, menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        int id = item.getItemId();        if (id == R.id.action_settings) {            return true;        }        return super.onOptionsItemSelected(item);    }  /*  void GetDatabase() {        habits = dh.GetDate(this);        for (Habit sd : habits) {            CheckBox checkBox = new CheckBox(this);            checkBox.setText(sd.getName());            container = (LinearLayout) findViewById(R.id.ainer);            LinearLayout.LayoutParams lParams = new LinearLayout.LayoutParams(wrapContent, wrapContent);            container.addView(checkBox, lParams);        }    }*/}